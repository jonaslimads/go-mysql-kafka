version: '3'

services:

  go-mysql-kafka:
    build:
      context: ./
      dockerfile: go-mysql-kafka/Dockerfile
    image: go-mysql-kafka:0.0.1
    container_name: go-mysql-kafka
    ports:
      - 8087:8080
    volumes:
      - ../go:/var/go-mysql-kafka/go
      - ../goroot:/var/go-mysql-kafka/goroot
      - ../../:/var/go-mysql-kafka/src
    networks:
      - go-mysql-kafka
    depends_on:
      - go-mysql-kafka-db
      - go-mysql-kafka-broker
    environment:
      - ENABLE_HOT_RELOAD=${ENABLE_HOT_RELOAD:-true}
      - MYSQL_HOST=${MYSQL_HOST:-go-mysql-kafka-db}
      - MYSQL_PORT=${MYSQL_PORT:-3306}
      - MYSQL_USER=${MYSQL_USER:-root}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-admin}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-employees}
      - KAFKA_HOST=${KAFKA_HOST:-go-mysql-kafka-broker}
      - KAFKA_PORT=${KAFKA_PORT:-9092}
    restart: unless-stopped

  go-mysql-kafka-db:
    build:
      context: ./
      dockerfile: mysql/Dockerfile
    image: mysql-binlog:5.7.29
    container_name: go-mysql-kafka-db
    ports:
      - 3306:3306
    networks:
      - go-mysql-kafka
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: admin
    restart: unless-stopped
    
  go-mysql-kafka-broker:
    image: wurstmeister/kafka
    container_name: go-mysql-kafka-broker
    ports:
      - 9092:9092
    depends_on:
      - go-mysql-kafka-zookeeper
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=go-mysql-kafka-zookeeper:2181
      - KAFKA_LISTENERS=INSIDE://:9092,OUTSIDE://:9094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_CREATE_TOPICS=employees:1:1
    networks:
      - go-mysql-kafka
    restart: unless-stopped

  go-mysql-kafka-zookeeper:
    image: wurstmeister/zookeeper
    container_name: go-mysql-kafka-zookeeper
    ports:
      - 2181:2181
    networks:
      - go-mysql-kafka
    restart: unless-stopped

networks:
  go-mysql-kafka: